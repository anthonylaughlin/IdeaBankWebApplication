@model CommerceIdeaBank.Models.ViewModels.Contributor.ContributorProjectViewModel
@using CommerceIdeaBank.GlobalConstants
@using CommerceIdeaBank.Models.ViewModels.Contributor;

@{
    ViewBag.Title = "Contribute Idea";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    string username = (string)HttpContext.Current.Session["currentUser"];
}

@if (Request.IsAuthenticated)
{
    int role = (int)HttpContext.Current.Session["userRole"];

    if (role == UserRole.CONTRIBUTOR)
    {


        using (Html.BeginForm())
        {
            @Html.ValidationSummary(true, "Failed to Create project. Check all fields.");
            <div>
                <fieldset>
                    <legend>Contribute new idea.</legend>

                    <div class="editor-label">
                        @Html.LabelFor(x => x.ProjectName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(x => x.ProjectName, new { @class="project_name_text" })
                        @Html.ValidationMessageFor(x => x.ProjectName)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(x => x.ProjectDesc)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(x => x.ProjectDesc, new { @class = "project_desc_just_text" })
                        @Html.ValidationMessageFor(x => x.ProjectDesc)
                    </div>

                    <!-- Code for adding file -->
                    @*
                    <div >
                        @using (Html.BeginForm(ActionName.AN_ADD_FILE, PermissionSpace.PS_CONTRIBUTOR_HOME,
                            new { cur_project = Model }, FormMethod.Post, 
                            new { enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(x => x.Username)
                            @Html.HiddenFor(x => x.ProjectName)
                            @Html.HiddenFor(x => x.ProjectID)
                            @Html.HiddenFor(x => x.ProjectDesc)
                            @Html.HiddenFor(x => x.PostDate)
                            @Html.HiddenFor(x => x.IsArchived)
                            @Html.HiddenFor(x => x.FileList)
                            @Html.HiddenFor(x => x.BusinessJustification)

                            if (Model != null)
                            {


                                //Display previously attached files
                                if (Model.FileList != null)
                                {
                                    foreach (ContributorIdeaFileViewModel file in Model.FileList)
                                    {
                                        if (file == null) { continue; }
                                        <input type="text" class="input_textbox" value="@file.FileName" readonly />
                                    }

                                    //Append file submission button
                                    <input type="file" name="new_file" id="new_file_id" /><br />
                                    <input type="submit" id="Submit" value="Upload" formaction="AddFile" />

                                }
                                else
                                {
                                    //Append file submission button
                                    <input type="file" name="new_file" id="new_file_id" /><br />
                                    <input type="submit" id="Submit" value="Upload" formaction="AddFile" />
                                }
                            }
                            else
                            {
                                //Append file submission button
                                <input type="file" name="new_file" id="new_file_id" /><br />
                                <input type="submit" id="Submit" value="Upload" formaction="AddFile" />
                            }

                        }
                    </div>
                    *@                    

                    <div class="editor-label">
                        @Html.LabelFor(x => x.BusinessJustification)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(x => x.BusinessJustification, new { @class = "project_desc_just_text" })
                        @Html.ValidationMessageFor(x => x.BusinessJustification)
                    </div>

                    @Html.HiddenFor(x => x.Username, new { @Value = @username })
                    @Html.HiddenFor(x => x.IsArchived, new { @Value = false })            
                    @Html.HiddenFor(x => x.Status, new { @Value = IdeaStatus.SUBMITTED })
                    @Html.HiddenFor(x => x.PostDate, new { @Value = DateTime.Now })

            
                    <div>
                        <input type="submit" value="Contribute" class="submit_button button" />
                    </div>

                </fieldset>
            </div>
        }


    }
    else if (role == UserRole.AMBASSADOR)
    {
        //Redirect erroneous ambassador to correct page
        Response.Redirect(Url.Action(ActionName.AN_CONTRIBUTE_IDEA, PermissionSpace.PS_AMBASSADOR_HOME));
    }
    else if (role == UserRole.ADMIN)
    {
        //Redirect erroneous admin to correct page
        Response.Redirect(Url.Action(ActionName.AN_CONTRIBUTE_IDEA, PermissionSpace.PS_ADMIN_HOME));
    }
    else
    {
        //Error. Permissions invalid. Log user off and redirect to default home
        Response.Redirect(Url.Action(ActionName.AN_PERMISSIONS_INVALID, PermissionSpace.PS_CONTRIBUTOR_HOME));
    }
}
else
{
    //If user not authenticated, route to default home
    Response.Redirect(Url.Action(ActionName.AN_INDEX, PermissionSpace.PS_DEFAULT_HOME));
}
