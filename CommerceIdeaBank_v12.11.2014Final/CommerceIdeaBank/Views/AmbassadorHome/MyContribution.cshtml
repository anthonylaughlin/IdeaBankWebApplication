@model PagedList.IPagedList<CommerceIdeaBank.Models.ViewModels.Ambassador.AmbassProjectViewModel>
@using CommerceIdeaBank.GlobalConstants
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "My Contributions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Request.IsAuthenticated)
{
    int role = (int)HttpContext.Current.Session["userRole"];

    if (role == UserRole.AMBASSADOR)
    {


        <h1 class="header">My Contributions</h1>

        <div class="data_view">
            <table class="contribution_table">
                <tr>
                    <th>    
                        @if (Model != null)
                        {
                            @Html.ActionLink("Project Name", ActionName.AN_MY_CONTRIBUTION, PermissionSpace.PS_AMBASSADOR_HOME,
                            new
                            {
                                sort_order = @ViewBag.CurrentSortOrder,
                                prev_sort_category = @ViewBag.CurrentSortCategory,
                                cur_sort_category = SortKey.PROJECT_NAME,
                                page = Model.PageNumber,
                                sort_flag = true
                            }, null)
                        }
                        else
                        {
                            @: Project Name
                        }                                         
                    </th>
                    <th>
                        Project Description                        
                    </th>
                    <th>    
                        @if (Model != null)
                        {
                            @Html.ActionLink("Post Date", ActionName.AN_MY_CONTRIBUTION, PermissionSpace.PS_AMBASSADOR_HOME,
                            new
                            {
                                sort_order = @ViewBag.CurrentSortOrder,
                                prev_sort_category = @ViewBag.CurrentSortCategory,
                                cur_sort_category = SortKey.PROJECT_POST_DATE,
                                page = Model.PageNumber,
                                sort_flag = true
                            }, null)
                        }
                        else
                        {
                            @: Post Date
                        }                                         
                    </th>
                </tr>

                @if (Model != null && Model.ToList().Count != 0)
                {                                                   
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.ProjectName, ActionName.AN_VIEW_IDEA, PermissionSpace.PS_AMBASSADOR_HOME, new { id = item.ProjectID }, null)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProjectDesc)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PostDate)
                            </td>
                        </tr>
                    }
                }
                else if (Model == null)
                {
                    <tr>
                        <td> You haven't submitted any projects yet. Better get started! :-) </td>
                    </tr>
                }
                else if (Model.ToList().Count == 0)
                {
                    <tr>
                        <td> You haven't submitted any projects yet. Better get started! :-) </td>
                    </tr>
                }
                

            </table>

            @if (ViewBag.CurrentSortCategory == ViewBag.PreviousSortCategory)
            {
                ViewBag.temp = ViewBag.CurrentSortCategory;

                //Toggle sort order
                if (ViewBag.CurrentSortOrder == SortKey.ASCEND)
                {
                    ViewBag.tempSortOrder = SortKey.DESCEND;
                }
                else
                {
                    ViewBag.tempSortOrder = SortKey.ASCEND;
                }
            }
            else
            {
                ViewBag.temp = ViewBag.PreviousSortCategory;
            }

            @if (Model != null)
            {
                <br />
                @:Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action(ActionName.AN_MY_CONTRIBUTION, PermissionSpace.PS_AMBASSADOR_HOME,
                        new
                        {
                            page,
                            sort_order = @ViewBag.tempSortOrder,
                            prev_sort_category = @ViewBag.temp,
                            cur_sort_category = @ViewBag.CurrentSortCategory,
                            sort_flag = true
                        }, null),
                        new PagedListRenderOptions { DisplayLinkToIndividualPages = true })   
            }            

        </div>

    }
    else if (role == UserRole.ADMIN)
    {
        //Redirect erroneous admin to correct page
        Response.Redirect(Url.Action(ActionName.AN_MY_CONTRIBUTION, PermissionSpace.PS_ADMIN_HOME));
    }
    else
    {
        //Error. Permissions invalid. Log user off and redirect to default home
        Response.Redirect(Url.Action(ActionName.AN_PERMISSIONS_INVALID, PermissionSpace.PS_AMBASSADOR_HOME));
    }
}
else
{
    //If user not authenticated, route to default home
    Response.Redirect(Url.Action(ActionName.AN_INDEX, PermissionSpace.PS_DEFAULT_HOME));
}
